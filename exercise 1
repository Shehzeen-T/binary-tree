#include <iostream>
#include <stack>
using namespace std;
class TNode {
public:
 char data;
 TNode* left;
 TNode* right;
 TNode(char val) : data(val), left(nullptr), right(nullptr) {}
};
TNode* constructTree(string postfix) {
 stack<TNode*> s;
 for (char ch : postfix) {
 if (isalnum(ch)) { // Operand
 s.push(new TNode(ch));
 } else { // Operator
 TNode* curr = new TNode(ch);
 curr->right = s.top(); s.pop();
 curr->left = s.top(); s.pop();
 s.push(curr);
 }
 }
return s.top(); // Root of the expression tree
}
void postorder(TNode* root) {
 if (!root) return;
 postorder(root->left);
 postorder(root->right);
 cout << root->data;
}
int main() {
 string postfix = "ab+ef*g*-";
 TNode* root = constructTree(postfix);
 cout << "Postorder traversal: ";
 postorder(root);
 cout << endl;
 return 0;
}
